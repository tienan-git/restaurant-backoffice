---
swagger: "2.0"
info:
  version: "2018-09-23T03:19:59Z"
  title: "Restaurant API"
host: "api.restaurant.sparkworks.jp"
schemes:
- "https"
paths:
  /coupons/{deviceId}/{couponId}:
    post:
      produces:
      - "application/json"
      parameters:
      - name: "couponId"
        in: "path"
        required: true
        type: "string"
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CommonNormalRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/coupons/{deviceId}/{couponId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
          integration.request.path.couponId: "method.request.path.couponId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "POST"
        type: "http"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "couponId"
        in: "path"
        required: true
        type: "string"
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CommonNormalRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/coupons/{deviceId}/{couponId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
          integration.request.path.couponId: "method.request.path.couponId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "DELETE"
        type: "http"
  /feedbacks/{deviceId}:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "FeedbackReq"
        required: true
        schema:
          $ref: "#/definitions/FeedbackReq"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CommonNormalRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/feedbacks/{deviceId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "POST"
        type: "http"
  /lotteries/histories/{deviceId}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/LotteryHistoryRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/lotteries/histories/{deviceId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "GET"
        type: "http"
  /lotteries/{deviceId}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/LotteryRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/lotteries/{deviceId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "GET"
        type: "http"
  /lotteries/{deviceId}/{lotteryId}:
    post:
      produces:
      - "application/json"
      parameters:
      - name: "lotteryId"
        in: "path"
        required: true
        type: "string"
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CommonNormalRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/lotteries/{deviceId}/{lotteryId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.lotteryId: "method.request.path.lotteryId"
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "POST"
        type: "http"
  /restaurants/{deviceId}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RestaurantRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/restaurants/{deviceId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "GET"
        type: "http"
  /synchronizations/{deviceId}:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "SynchronizationsReq"
        required: true
        schema:
          $ref: "#/definitions/SynchronizationsReq"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SynchronizationsRes"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
        406:
          description: "406 response"
          schema:
            $ref: "#/definitions/Error"
      x-amazon-apigateway-integration:
        uri: "http://myapi.com/synchronizations/{deviceId}"
        responses:
          200:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
          406:
            statusCode: "406"
        requestParameters:
          integration.request.path.deviceId: "method.request.path.deviceId"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        connectionId: "kaeq9r"
        httpMethod: "POST"
        type: "http"
definitions:
  Coupon:
    type: "object"
    properties:
      couponId:
        type: "string"
      couponName:
        type: "string"
      couponsImageUrl:
        type: "string"
      couponsDetail:
        type: "string"
      couponsPeriod:
        type: "string"
  CommonNormalRes:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
  LotteryInfo:
    type: "object"
    properties:
      lotteryId:
        type: "number"
        format: "int32"
      lotteryTitle:
        type: "string"
      lotteryDetail:
        type: "string"
      lotteryImage:
        type: "string"
      count:
        type: "number"
        format: "int32"
      endDatetime:
        type: "string"
        format: "date-time"
      announcementDatetime:
        type: "string"
        format: "date-time"
  SynchronizationsReq:
    type: "object"
    properties:
      nickName:
        type: "string"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
        description: "エラーコード"
      message:
        type: "string"
        description: "エラーメッセージ"
  RestaurantInfo:
    type: "object"
    properties:
      restaurantId:
        type: "string"
      name:
        type: "string"
      address:
        type: "string"
      phoneNumber:
        type: "string"
      imageUrl:
        type: "string"
      Latitude:
        type: "number"
        format: "double"
      Longitude:
        type: "number"
        format: "double"
      couponExistflag:
        type: "number"
        format: "double"
      coupon:
        $ref: "#/definitions/Coupon"
  SynchronizationsRes:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/SynchronizationsInfo"
  LotteryHistoryRes:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LotteryHistoryInfo"
  LotteryHistoryInfo:
    type: "object"
    properties:
      lotteryTitle:
        type: "string"
      lotteryStatus:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
  RestaurantRes:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/RestaurantInfo"
  LotteryRes:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LotteryInfo"
  SynchronizationsInfo:
    type: "object"
    properties:
      couponId:
        type: "string"
      couponName:
        type: "string"
      couponsImageUrl:
        type: "string"
      couponsDetail:
        type: "string"
      couponsPeriod:
        type: "string"
      restaurantId:
        type: "string"
      name:
        type: "string"
      address:
        type: "string"
      phoneNumber:
        type: "string"
      imageUrl:
        type: "string"
      latitude:
        type: "number"
      longitude:
        type: "number"
  FeedbackReq:
    type: "object"
    properties:
      type:
        type: "string"
      detail:
        type: "string"
